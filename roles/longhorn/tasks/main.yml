---
- name: Add the OS specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: Get kernel version on Debian-based systems
  ansible.builtin.shell: uname -r
  register: kernel_version
  when: ansible_os_family == "Debian"

- name: Set kernel version as a variable
  ansible.builtin.set_fact: 
    ansible_kernel: "{{ kernel_version.stdout }}"
  when: ansible_os_family == "Debian"

#- name: Install kernel header
#  ansible.builtin.apt:
#    name: "linux-modules-extra-{{ ansible_kernel }}"
#    state: present
#    update_cache: yes
#  when: ansible_os_family == "Debian"

- name: Install dependency packages on Debian-based systems
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: "{{ packages }}"
  when: ansible_os_family == "Debian"

- name: Install dependency packages on RHEL-based systems
  ansible.builtin.yum:
    name: "{{ item }}"
    state: latest
  loop: "{{ packages }}"
  when: ansible_os_family == "RedHat"

- name: Configure Huge Pages
  ansible.posix.sysctl:
    name: vm.nr_hugepages
    value: '1024'
    sysctl_set: true
    reload: true

- name: Enable and start services
  ansible.builtin.service:
    name: iscsid
    state: started
    enabled: yes

- name: Load kernel modules
  community.general.modprobe:
    name: "{{ item }}"
    state: present
    persistent: present
  loop: "{{ kernel_modules }}"

- name: Get latest longhorn release
  ansible.builtin.shell:
    cmd: curl --silent "https://api.github.com/repos/longhorn/longhorn/releases/latest"|grep '"tag_name"'|sed -E 's/.*"([^"]+)".*/\1/'|sed 's/v//'
  register: longhorn_release
  delegate_to: 127.0.0.1
  become: no

- name: Create manifests directory if it does not exist
  ansible.builtin.file:
    path: "{{ manifests_dir }}"
    state: directory
  delegate_to: 127.0.0.1
  become: no

- name: Download iscsi installer manifest
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/longhorn/longhorn/v{{ longhorn_release.stdout }}/deploy/prerequisite/longhorn-iscsi-installation.yaml"
    dest: "{{ manifests_dir }}"
  delegate_to: 127.0.0.1
  become: no

- name: Download nfs installer manifest
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/longhorn/longhorn/v{{ longhorn_release.stdout }}/deploy/prerequisite/longhorn-nfs-installation.yaml"
    dest: "{{ manifests_dir }}"
  delegate_to: 127.0.0.1
  become: no

- name: Download Longhorn manifest
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/longhorn/longhorn/v{{ longhorn_release.stdout }}/deploy/longhorn.yaml"
    dest: "{{ manifests_dir }}"
  delegate_to: 127.0.0.1
  become: no

- name: Download Longhorn PVC test manifest
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/longhorn/longhorn/v{{ longhorn_release.stdout }}/examples/pod_with_pvc.yaml"
    dest: "{{ manifests_dir }}"
  delegate_to: 127.0.0.1
  become: no

#- name: Apply Longhorn manifests
#  kubernetes.core.k8s:
#    state: present
#    src: "{{ manifests_dir }}/longhorn.yaml"
#    kubeconfig: "{{ kubeconfig_file }}"
#  delegate_to: 127.0.0.1
#  become: no
